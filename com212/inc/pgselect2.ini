<?php
/*
全スクロールページに戻す場合

*/

require("pgselect.ini");

class PgSelect2 extends PgSelect {
 var $maxl = 10;	// ページに一度に表示する行数

 var $oidcol = "__target_oid__";

  // 「前」の表示
  function printPrev($sql, $offset) {
    global $PHP_SELF;
    $usql = urlencode($sql);
    $prevoffset = $offset - $this->maxl;
    print("<a href=\"$PHP_SELF?usersql=$usql&offset=$prevoffset\">[前の $this->maxl 件に戻る]</a>");
  }

  // 「次」の表示
  function printNext($sql, $offset, $n) {
    global $PHP_SELF;
    $usql = urlencode($sql);
    $nextoffset = $offset + $this->maxl;
//    print("<a href=\"$PHP_SELF?usersql=$usql&offset=$nextoffset\">[次の $n 件に続く]</a>");
	$offnum = 0; 
	print "<div style=\"font-size:14px;width=440px;height=15px;position:absolute;left:580px;line-height:1.8\" onmouseover=\"winscr();\">";
	for ($i = 1;$i <= 20 ;$i++) {
	  if (($i-1) * $this->maxl>= $n) continue;
          if ($offnum == $offset) {
            print("<B><a href=\"$PHP_SELF?usersql=$usql&offset=$offnum\"><font color=red>($i)</font></a></B>");
	    print "&nbsp;&nbsp;";
	  } else {
            print("<a href=\"$PHP_SELF?usersql=$usql&offset=$offnum\">$i</a>");
	    print "&nbsp;&nbsp;";
	  }
	  $offnum += $this->maxl;
	}
        print "&nbsp;" . $n . "&nbsp;件";

        print "</div>";
  }

  // 表示行数の指定
  function setmaxl($num) {
    $this->maxl = $num;
  }

  // 更新/削除タグの表示
  function printUpdateTag($oid) {
    global $PHP_SELF;
//    print("<td><a href=\"$PHP_SELF?mode=updateForm&oid=$oid\">更新/削除</a></td>\n");
  }

  // 検索の実行
  function doSelect($sql = "",$kp="") {
    global $usersql;	// クエリーコンポーネント(SELECT文)
    global $offset;	// クエリーコンポーネント(そのページの先頭タプル番号)

    if (!$_GET[usersql]) {	// はじめての表示？
      $usersql = $sql;
      $offset = 0;
    } else {
      // magic quote を削除
      $usersql = $sql;
      $usersql = ereg_replace("\\\\'","'",$usersql);
	  $offset = $_GET["offset"];
    }

    // limit - offset 句の添付
    if ($kp=='ON') $offset = $_SESSION['offset']; // 2018年8月追加
    $sql = $usersql . " limit $this->maxl offset $offset";

    @$result = pg_exec($sql);	// selectを実行
    if ($result == false) {
//      printf("SQLの実行に失敗しました。");
      printf("SQL:\"$sql\"の実行に失敗しました。");
      exit;
    }
    $rows = pg_numrows($result);	// 行数を取得
    if ($rows == 0) {
	print "<div style=\"background-color:#ffcc66;width=280px;height=30px;position:absolute;top:420px;left:400px;\"><br>";
      printf("条件を満たすデータがありません");
	print "</div>";
      exit;
    }
    if ($offset == 0) $ret_rows= $rows;

    $columns = pg_numfields($result);	// 列数を取得

    $this->printTableHeader();		// テーブル開始タグの表示

    $is_updatable = -1;

    for ($j = 0;$j < $rows;$j++) {
      $cmod = $j % 2;
      if ($cmod == 1) $cc="#FFA07A"; // FFE4B5 FFA07A 
	else $cc="#FFFFFF"; // FFCC99 
      if ($j == 0) { // 見出し行
	print("<tr>");
//	print("<tr class=\"Freezing\">");  //行見出しも固定
	for ($i = 0;$i < $columns;$i++) {
	  $str = pg_fieldname($result,$i);	// 列名の取り出し
	  if ($str == $this->oidcol) {		// 更新キー？
	    $is_updatable = $i;
		print "<td nowrap class=FreezingCol width=43 style=\"BACKGROUND-COLOR: #CFCFCF;\" align=center>";
		print "<input type=\"button\" value=\"最新\" style=\"color: #FF0000\" onclick=\"rCheck2();\"></td>";
	  } else {
          $str = $this->get_Jcolumn($str);	// 項目名の変換
		$this->printHeader($i, $str);	// 列名の表示
	  	$fieldlist[$i] = $str;
	  }
	}
	print("</tr>\n");
      }
      print("<tr bgcolor=$cc>");
      $oid = false;

      $arr = pg_fetch_array($result,$j);

/* */
$sqlfile ="select reg_date,semi_id,org_filename,sys_filename,remark from file where semi_id = " . $arr[semi_id] . " and status=0 order by semi_id,sys_num";
$result2 = @pg_exec($sqlfile);
if (!$result2) {
  print ("ファイル情報検索エラー");
  exit;
}
// レコード数を確認します
$fmax=35; //ファイル最大数
$kaiji_point = 5; // 最大7個まで
$oudaku_point = 15;
$denpyo_point = 25;
$filerows = @pg_numrows($result2);
$fileinfo=array();
for ($i = 0;$i < $fmax;$i++) {
  $fileinfo[$i]['org_filename']="";
  $fileinfo[$i]['sys_filename']="";
}
for ($i = 0;$i < $filerows;$i++) {
  $file_arr = pg_fetch_array($result2,$i);
 if ($file_arr['reg_date'] < '2011-12-01') {
  if (mbereg("座長", $file_arr['org_filename'])) {
    $fileinfo[1]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[1]['sys_filename'] = $file_arr['sys_filename'];
  } else if (mbereg("演者", $file_arr['org_filename'])) {
    $fileinfo[2]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[2]['sys_filename'] = $file_arr['sys_filename'];
  } else if (eregi("cv", $file_arr['org_filename'])) {
    if (empty($fileinfo[3]['org_filename'])) {
	$fileinfo[3]['org_filename'] = $file_arr['org_filename'];
	$fileinfo[3]['sys_filename'] = $file_arr['sys_filename'];
    } else if (empty($fileinfo[4]['org_filename'])) {
	$fileinfo[4]['org_filename'] = $file_arr['org_filename'];
	$fileinfo[4]['sys_filename'] = $file_arr['sys_filename'];
    }
  } else if ( (mbereg("ＣＶ", $file_arr['org_filename'])) || (mbereg("ｃｖ", $file_arr['org_filename']))) { // mb_eregi mbereg
    if (empty($fileinfo[3]['org_filename'])) {
	$fileinfo[3]['org_filename'] = $file_arr['org_filename'];
	$fileinfo[3]['sys_filename'] = $file_arr['sys_filename'];
    } else if (empty($fileinfo[4]['org_filename'])) {
	$fileinfo[4]['org_filename'] = $file_arr['org_filename'];
	$fileinfo[4]['sys_filename'] = $file_arr['sys_filename'];
    }
  } else if (ereg("pdf", $file_arr['org_filename'])) {
    $fileinfo[0]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[0]['sys_filename'] = $file_arr['sys_filename'];
  } else {
//    $fileinfo[4]['org_filename'] = $file_arr['org_filename'];
//    $fileinfo[4]['sys_filename'] = $file_arr['sys_filename'];
  }
 } else {
  if ($file_arr['remark'] == "チラシ") {
    $fileinfo[0]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[0]['sys_filename'] = $file_arr['sys_filename'];
  } else if ($file_arr['remark'] == "開示承諾書") {
    $fileinfo[$kaiji_point]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[$kaiji_point]['sys_filename'] = $file_arr['sys_filename'];
    $kaiji_point += 1;
  } else if ($file_arr['remark'] == "応諾書") {
    $fileinfo[$oudaku_point]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[$oudaku_point]['sys_filename'] = $file_arr['sys_filename'];
    $oudaku_point += 1;
  } else if ($file_arr['remark'] == "伝票") {
    $fileinfo[$denpyo_point]['org_filename'] = $file_arr['org_filename'];
    $fileinfo[$denpyo_point]['sys_filename'] = $file_arr['sys_filename'];
    $denpyo_point += 1;
  } else if ($file_arr['remark'] == "CV") {
    if (empty($fileinfo[3]['org_filename'])) {
	$fileinfo[3]['org_filename'] = $file_arr['org_filename'];
	$fileinfo[3]['sys_filename'] = $file_arr['sys_filename'];
    } else if (empty($fileinfo[4]['org_filename'])) {
	$fileinfo[4]['org_filename'] = $file_arr['org_filename'];
	$fileinfo[4]['sys_filename'] = $file_arr['sys_filename'];
    }
  } else if ($file_arr['remark'] == "控室案内") {
    if (mbereg("座長", $file_arr['org_filename'])) {
      $fileinfo[1]['org_filename'] = $file_arr['org_filename'];
      $fileinfo[1]['sys_filename'] = $file_arr['sys_filename'];
    } else if (mbereg("演者", $file_arr['org_filename'])) {
      $fileinfo[2]['org_filename'] = $file_arr['org_filename'];
      $fileinfo[2]['sys_filename'] = $file_arr['sys_filename'];
    }
  }
 }
}
pg_freeresult($result2);	// 検索結果の解放
/* */

      for ($i = 0;$i < $columns;$i++) {
        if ($is_updatable == $i) {
	  $oid = $arr[$i];
	  $this->printUpdateTag($oid);
        } else {
	  $ofnum = $offset + $j;
          $this->printData($i, $arr,$fieldlist,$fileinfo);	// データの表示,$fieldlistは項目名
        }
      }

      print("</tr>\n");
    }

    pg_freeresult($result);	// 検索結果の解放

    print("</TBODY></TABLE></TD></TR></TBODY>");
    print("</table></div>");

//    if ($offset > 0) {
//      $this->printPrev($usersql, $offset);
//    }

    $offset += $this->maxl;
//    $sql = $usersql . " limit $this->maxl offset $offset";
    $sql = $usersql;

    @$result = pg_exec($sql);	// 次のページに表示するデータがあるか検索する
    if ($result == false) {
      printf("SQL:の実行に失敗しました。");
      exit;
    }
    $n = pg_numrows($result);

//    if ($n > 0) {	// 次のページのデータあり？
	print "<p>";
      $this->printNext($usersql, $offset-$this->maxl, $n);
	print "</p>";
//    }

    pg_freeresult($result);	// 検索結果の解放
    return ($ret_rows);
  }
}
?>
